// -*- c++ -*-

#ifndef _LIBCPP_NEW
#define _LIBCPP_NEW

#include <cstddef>

// new
[[nodiscard]] void* operator new(std::size_t count);
[[nodiscard]] void* operator new[](std::size_t count);

// placement new
[[nodiscard]] constexpr void* operator new(std::size_t count, void* ptr) noexcept {
	return ptr;
}

[[nodiscard]] constexpr void* operator new[](std::size_t count, void* ptr) noexcept {
	return ptr;
}

// delete
void operator delete(void* ptr) noexcept;
void operator delete[](void* ptr) noexcept;

namespace std {
	// new handler
	typedef void (*new_handler)();
	std::new_handler get_new_handler() noexcept;
	std::new_handler set_new_handler(std::new_handler new_p) noexcept;
} // namespace std

#endif
